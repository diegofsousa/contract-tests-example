# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Pull Request pipeline

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

  local-contract-tests:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 18
          uses: actions/setup-node@v3
          with:
            node-version: '18.x '
        - name: Run schema tests
          run: |
            cd schema_tests/tests/
            npm install
            node index.js

  validate-external-contract-tests:
      needs: [build, local-contract-tests]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Read schemas.json
          id: package
          uses: juliangruber/read-file-action@v1
          with:
            path: ./schema_tests/schemas.json
        - name: Echo schemas.json
          run: echo "${{ steps.package.outputs.content }}"
        - name: External contract validate
          id: request-to-lambda
          uses: fjogeleit/http-request-action@v1
          with:
            url: 'https://8vip765q9k.execute-api.sa-east-1.amazonaws.com/default/basicLambda'
            method: 'POST'
            customHeaders: '{"Content-Type": "application/json", "platform": "backend"}'
            data: "${{ steps.package.outputs.content }}"
        - name: Show Response
          run: |
            echo ${{ steps.request-to-lambda.outputs.response }}
            echo ${{ fromJson(steps.request-to-lambda.outputs.response).status }}
            
        - name: Check result fail
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status == 'FAILED_SCHEMA_TEST' }}
          uses: actions/github-script@v3
          with:
            script: |
              core.setFailed('[FAILED_SCHEMA_TEST] Some schemas test fail')

        - name: Check result warning update and success
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status == 'SUCCESS_SCHEMA_TESTS_AND_SCHEMA_UPDATE_BY_OWNER' }}
          uses: actions/github-script@v3
          with:
            script: |
              core.warning('[SUCCESS_SCHEMA_TESTS_AND_SCHEMA_UPDATE_BY_OWNER] Some changes from schema tests where the backend is the owner were detected. View the logs and exercise caution when proceeding with changes');

        - name: Comment PR
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status == 'SUCCESS_SCHEMA_TESTS_AND_SCHEMA_UPDATE_BY_OWNER' }}
          uses: mshick/add-pr-comment@v1
          with:
            message: |
              **SUCCESS_SCHEMA_TESTS_AND_SCHEMA_UPDATE_BY_OWNER**
              Some changes from schema tests where the backend is the owner were detected. View the logs and exercise caution when proceeding with changes
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            allow-repeats: true

        - name: Comment PR on fail
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status == 'FAILED_SCHEMA_TEST' }}
          uses: mshick/add-pr-comment@v1
          with:
            message: |
              **FAILED_SCHEMA_TEST**
              Oops! Some schema tests failed! :crying_cat_face: See the logs.
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            allow-repeats: true

        - name: Check result warning update
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status == 'SCHEMA_UPDATE_BY_OWNER' }}
          uses: actions/github-script@v3
          with:
            script: |
              core.warning('[SCHEMA_UPDATE_BY_OWNER] Some changes from schema tests where the backend is the owner were detected. View the logs and exercise caution when proceeding with changes');

        - name: Check new schemas
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).hasNewCases == true }}
          uses: actions/github-script@v6
          with:
            script: |
              core.notice('[NEW_SCHEMAS] New schemes have been detected! See the logs');