# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Production pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

  local-contract-tests:

      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 18
          uses: actions/setup-node@v3
          with:
            node-version: '18.x '
        - name: Run schema tests
          run: |
            cd schema_tests/tests/
            npm install
            node index.js
              
  sync-contract-tests-changes:
    needs: [build, local-contract-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Read schemas.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./schema_tests/schemas.json
      - name: Echo schemas.json
        run: echo "${{ steps.package.outputs.content }}"
      - name: External contract validate
        id: request-to-lambda-validate
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://8vip765q9k.execute-api.sa-east-1.amazonaws.com/default/basicLambda'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "platform": "backend"}'
          data: "${{ steps.package.outputs.content }}"
      - name: Show Response
        run: |
          echo ${{ steps.request-to-lambda-validate.outputs.response }}
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18.x '
      - name: Run schema tests
        run: |
          jqOut=$(echo '${{ steps.request-to-lambda-validate.outputs.response }}' | jq -r '[.newCases[].schema]|join(" ")')
          echo $jqOut
          cd schema_tests/tests/
          npm install
          eval "node index.js $jqOut"
      - name: Read .schema-data.json
        id: schema-data
        uses: juliangruber/read-file-action@v1
        with:
          path: ./schema_tests/tests/schemas/.schema-data.json
      - name: Push contract
        if: ${{ fromJson(steps.request-to-lambda-validate.outputs.response).canPush == true }}
        id: request-to-lambda-push
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://8vip765q9k.execute-api.sa-east-1.amazonaws.com/default/pushSchema'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "platform": "backend"}'
          data: "${{ steps.schema-data.outputs.content }}"